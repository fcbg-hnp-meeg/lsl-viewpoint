[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools >= 64.0.0']

[project]
authors = [
  {email = 'mathieu.scheltienne@fcbg.ch', name = 'Mathieu Scheltienne'},
]
classifiers = [
  'License :: OSI Approved :: MIT License',
  'Natural Language :: English',
  'Operating System :: Microsoft :: Windows',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11',
  'Programming Language :: Python :: 3.12',
]
dependencies = [
  'mne-lsl',
  'numpy>=1.21',
  'packaging',
  'psutil',
]
description = 'LSL module for the viewpoint eyetracker.'
keywords = [
  'eye-tracker',
  'labstreaminglayer',
  'lsl',
  'python',
]
license = {file = 'LICENSE'}
maintainers = [
  {email = 'mathieu.scheltienne@fcbg.ch', name = 'Mathieu Scheltienne'},
]
name = 'lsl_viewpoint'
readme = 'README.md'
requires-python = '>=3.10'
version = '0.3.0.dev0'

[project.optional-dependencies]
all = [
  'lsl_viewpoint[build]',
  'lsl_viewpoint[style]',
  'lsl_viewpoint[test]',
]
build = [
  'build',
  'twine',
]
full = [
  'lsl_viewpoint[all]',
]
style = [
  'codespell[toml]>=2.2.4',
  'isort',
  'pydocstyle[toml]',
  'ruff>=0.1.8',
  'toml-sort',
  'yamllint',
]
test = [
  'pytest',
  'pytest-cov',
  'pytest-timeout',
]

[project.scripts]
lsl_viewpoint = 'lsl_viewpoint.commands.lsl_viewpoint:run'
lsl_viewpoint-sys_info = 'lsl_viewpoint.commands.sys_info:run'

[project.urls]
documentation = 'https://github.com/fcbg-hnp-meeg/lsl-viewpoint'
homepage = 'https://github.com/fcbg-hnp-meeg/lsl-viewpoint'
source = 'https://github.com/fcbg-hnp-meeg/lsl-viewpoint'
tracker = 'https://github.com/fcbg-hnp-meeg/lsl-viewpoint/issues'

[tool.codespell]
check-filenames = true
check-hidden = true
ignore-words = '.codespellignore'
skip = 'build,.git,.mypy_cache,.pytest_cache'

[tool.coverage.report]
exclude_lines = [
  'if __name__ == .__main__.:',
  'if TYPE_CHECKING:',
  'pragma: no cover',
]
precision = 2

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
  '**/__init__.py',
  '**/lsl_viewpoint/_version.py',
  '**/lsl_viewpoint/commands/*',
  '**/lsl_viewpoint/utils/_fixes.py',
  '**/tests/**',
]

[tool.isort]
extend_skip_glob = [
  'setup.py',
]
line_length = 88
multi_line_output = 3
profile = 'black'
py_version = 310

[tool.pydocstyle]
add_ignore = 'D100,D104,D107'
convention = 'numpy'
ignore-decorators = '(copy_doc|property|.*setter|.*getter|pyqtSlot|Slot)'
match = '^(?!setup|__init__|test_).*\.py'
match-dir = '^lsl_viewpoint.*'

[tool.pytest.ini_options]
addopts = '--durations 20 --junit-xml=junit-results.xml --verbose'
minversion = '8.0'

[tool.ruff]
extend-exclude = [
  "doc",
  "setup.py",
]
line-length = 88

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
ignore = []
select = ["A", "B", "E", "F", "UP", "W"]

[tool.ruff.lint.per-file-ignores]
'*' = [
  "B904", # 'Within an except clause, raise exceptions with raise ... from ...'
]
'*.pyi' = ['E501']
'__init__.py' = ['F401']

[tool.setuptools]
include-package-data = false

[tool.setuptools.packages.find]
exclude = ['lsl_viewpoint*tests']
include = ['lsl_viewpoint*']

[tool.tomlsort]
all = true
ignore_case = true
trailing_comma_inline_array = true
